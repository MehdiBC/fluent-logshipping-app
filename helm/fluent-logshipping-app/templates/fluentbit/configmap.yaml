apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ .Values.fluentbit.name }}-config
  namespace: {{ .Release.Namespace }}
  labels:
    app: {{ .Values.fluentbit.name }}
data:
  # Configuration files: server, input, filters and output
  # ======================================================
  fluentbit.conf: |
    [SERVICE]
        Flush         5
        Log_Level     {{ .Values.fluentbit.logLevel }}
        Daemon        off
        Parsers_File  parsers.conf
        HTTP_Server   On
        HTTP_Listen   0.0.0.0
        HTTP_Port     {{ .Values.fluentbit.port }}

    [INPUT]
        Name              tail
        Tag               kubernetes.*
        Path              /var/log/containers/*.log
        Parser            docker
        DB                /var/log/fluentbit_db/flb_kube.db
        Buffer_Max_Size   128k
        Mem_Buf_Limit     10MB
        Skip_Long_Lines   On
        Refresh_Interval  10
    
    [INPUT]
        Name              tail
        Tag               audit.kubernetes.*
        Path              /var/log/apiserver/audit.log
        Parser            json
        DB                /var/log/fluentbit_db/flb_kube_audit.db
        Buffer_Max_Size   128k
        Mem_Buf_Limit     10MB
        Skip_Long_Lines   On
        Refresh_Interval  10

    [INPUT]
        Name              systemd
        Tag               audit.ssh.*
        Parser            syslog
        Systemd_Filter    SYSLOG_IDENTIFIER=sshd
        Buffer_Max_Size   128k
        Mem_Buf_Limit     10MB
        DB                /var/log/fluentbit_db/flb_ssh.db
        Skip_Long_Lines   On
        Refresh_Interval  10

    [FILTER]
        # Remove garbage log entries from fluent-bit (https://github.com/fluent/fluent-bit/issues/429)
        Name   grep
        Match  *
        Exclude  log \"took\"\"errors\"\"took\"\"errors\"

    [FILTER]
        Name                kubernetes
        Match               kubernetes.*
        Kube_URL            https://kubernetes.default.svc:443
        Merge_Log           Off
        K8S-Logging.Parser  On

    [FILTER]
        Name record_modifier
        Match *
        Record cluster {{ .Values.clusterID }}

    [OUTPUT]
        Name            forward
        Match           *
        Host            ${FLUENTD_HOST}
        Port            ${FLUENTD_PORT}

  parsers.conf: |
    [PARSER]
        Name   json
        Format json
        Time_Key time
        Time_Format %d/%b/%Y:%H:%M:%S %z

    [PARSER]
        Name        docker
        Format      json
        Time_Key    time
        Time_Format %Y-%m-%dT%H:%M:%S.%L
        Time_Keep   On
        # Command      |  Decoder | Field | Optional Action
        # =============|==================|=================
        Decode_Field_As   escaped    log

    [PARSER]
        Name        syslog
        Format      regex
        Regex       ^\<(?<pri>[0-9]+)\>(?<time>[^ ]* {1,2}[^ ]* [^ ]*) (?<host>[^ ]*) (?<ident>[a-zA-Z0-9_\/\.\-]*)(?:\[(?<pid>[0-9]+)\])?(?:[^\:]*\:)? *(?<message>.*)$
        Time_Key    time
        Time_Format %b %d %H:%M:%S
